{"ast":null,"code":"import { useState } from \"react\";\nimport { useCamera } from '@ionic/react-hooks/camera';\nimport { useFilesystem, base64FromPath } from '@ionic/react-hooks/filesystem';\nimport { useStorage } from '@ionic/react-hooks/storage';\nimport { CameraResultType, CameraSource, FilesystemDirectory } from \"@capacitor/core\";\nconst PHOTO_STORAGE = \"photos\";\nexport function usePhotoGallery() {\n  const {\n    getPhoto\n  } = useCamera();\n  const [photos, setPhotos] = useState([]);\n  const {\n    deleteFile,\n    getUri,\n    readFile,\n    writeFile\n  } = useFilesystem();\n  const {\n    get,\n    set\n  } = useStorage();\n\n  const takePhoto = async () => {\n    const cameraPhoto = await getPhoto({\n      resultType: CameraResultType.Uri,\n      source: CameraSource.Camera,\n      quality: 100\n    });\n    const fileName = new Date().getTime() + '.jpeg';\n    const savedFileImage = await savePicture(cameraPhoto, fileName);\n    const newPhotos = [savedFileImage, ...photos];\n    setPhotos(newPhotos);\n  };\n\n  const savePicture = async (photo, fileName) => {\n    const base64Data = await base64FromPath(photo.webPath);\n    const savedFile = await writeFile({\n      path: fileName,\n      data: base64Data,\n      directory: FilesystemDirectory.Data\n    }); // Use webPath to display the new image instead of base64 since it's\n    // already loaded into memory\n\n    return {\n      filepath: fileName,\n      webviewPath: photo.webPath\n    };\n  };\n\n  return {\n    photos,\n    takePhoto\n  };\n}","map":{"version":3,"sources":["/Users/ahadyboy/Desktop/Tha Boy/UNI/2020 - UNI/SWEN325/Assignment 1/Packit/src/usePhotoGallery.ts"],"names":["useState","useCamera","useFilesystem","base64FromPath","useStorage","CameraResultType","CameraSource","FilesystemDirectory","PHOTO_STORAGE","usePhotoGallery","getPhoto","photos","setPhotos","deleteFile","getUri","readFile","writeFile","get","set","takePhoto","cameraPhoto","resultType","Uri","source","Camera","quality","fileName","Date","getTime","savedFileImage","savePicture","newPhotos","photo","base64Data","webPath","savedFile","path","data","directory","Data","filepath","webviewPath"],"mappings":"AAAA,SAASA,QAAT,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,+BAA9C;AACA,SAASC,UAAT,QAA2B,4BAA3B;AAEA,SAASC,gBAAT,EAA2BC,YAA3B,EAAiEC,mBAAjE,QAA4F,iBAA5F;AAEA,MAAMC,aAAa,GAAG,QAAtB;AAEA,OAAO,SAASC,eAAT,GAA2B;AAEhC,QAAM;AAAEC,IAAAA;AAAF,MAAeT,SAAS,EAA9B;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAU,EAAV,CAApC;AACA,QAAM;AAAEa,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,QAAtB;AAAgCC,IAAAA;AAAhC,MAA8Cd,aAAa,EAAjE;AACA,QAAM;AAAEe,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAed,UAAU,EAA/B;;AAEA,QAAMe,SAAS,GAAG,YAAY;AAC5B,UAAMC,WAAW,GAAG,MAAMV,QAAQ,CAAC;AACjCW,MAAAA,UAAU,EAAEhB,gBAAgB,CAACiB,GADI;AAEjCC,MAAAA,MAAM,EAAEjB,YAAY,CAACkB,MAFY;AAGjCC,MAAAA,OAAO,EAAE;AAHwB,KAAD,CAAlC;AAKA,UAAMC,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,OAAxC;AACA,UAAMC,cAAc,GAAG,MAAMC,WAAW,CAACV,WAAD,EAAcM,QAAd,CAAxC;AACA,UAAMK,SAAS,GAAG,CAACF,cAAD,EAAiB,GAAGlB,MAApB,CAAlB;AACAC,IAAAA,SAAS,CAACmB,SAAD,CAAT;AACD,GAVD;;AAYA,QAAMD,WAAW,GAAG,OAAOE,KAAP,EAA2BN,QAA3B,KAAgE;AAClF,UAAMO,UAAU,GAAG,MAAM9B,cAAc,CAAC6B,KAAK,CAACE,OAAP,CAAvC;AACA,UAAMC,SAAS,GAAG,MAAMnB,SAAS,CAAC;AAChCoB,MAAAA,IAAI,EAAEV,QAD0B;AAEhCW,MAAAA,IAAI,EAAEJ,UAF0B;AAGhCK,MAAAA,SAAS,EAAE/B,mBAAmB,CAACgC;AAHC,KAAD,CAAjC,CAFkF,CAQlF;AACA;;AACA,WAAO;AACLC,MAAAA,QAAQ,EAAEd,QADL;AAELe,MAAAA,WAAW,EAAET,KAAK,CAACE;AAFd,KAAP;AAID,GAdD;;AAgBA,SAAO;AACLvB,IAAAA,MADK;AAELQ,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useCamera } from '@ionic/react-hooks/camera';\nimport { useFilesystem, base64FromPath } from '@ionic/react-hooks/filesystem';\nimport { useStorage } from '@ionic/react-hooks/storage';\nimport { isPlatform } from '@ionic/react';\nimport { CameraResultType, CameraSource, CameraPhoto, Capacitor, FilesystemDirectory } from \"@capacitor/core\";\n\nconst PHOTO_STORAGE = \"photos\";\n\nexport function usePhotoGallery() {\n\n  const { getPhoto } = useCamera();\n  const [photos, setPhotos] = useState<Photo[]>([]);\n  const { deleteFile, getUri, readFile, writeFile } = useFilesystem();\n  const { get, set } = useStorage();\n\n  const takePhoto = async () => {\n    const cameraPhoto = await getPhoto({\n      resultType: CameraResultType.Uri,\n      source: CameraSource.Camera,\n      quality: 100\n    });\n    const fileName = new Date().getTime() + '.jpeg';\n    const savedFileImage = await savePicture(cameraPhoto, fileName);\n    const newPhotos = [savedFileImage, ...photos];\n    setPhotos(newPhotos);\n  };\n\n  const savePicture = async (photo: CameraPhoto, fileName: string): Promise<Photo> => {\n    const base64Data = await base64FromPath(photo.webPath!);\n    const savedFile = await writeFile({\n      path: fileName,\n      data: base64Data,\n      directory: FilesystemDirectory.Data\n    });\n\n    // Use webPath to display the new image instead of base64 since it's\n    // already loaded into memory\n    return {\n      filepath: fileName,\n      webviewPath: photo.webPath\n    };\n  };\n\n  return {\n    photos,\n    takePhoto\n  };\n}\n\n\n\nexport interface Photo {\n  filepath: string;\n  webviewPath?: string;\n  base64?: string;\n}"]},"metadata":{},"sourceType":"module"}