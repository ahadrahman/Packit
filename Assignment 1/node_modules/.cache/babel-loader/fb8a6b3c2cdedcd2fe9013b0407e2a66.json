{"ast":null,"code":"import { COMPUTER_VISION_SUBSCRIPTION_KEY, COMPUTER_VISION_ENDPOINT } from \"./credentials\";\n\nconst async = require('async');\n\nconst fs = require('fs');\n\nconst https = require('https');\n\nconst path = require(\"path\");\n\nconst createReadStream = require('fs').createReadStream;\n\nconst sleep = require('util').promisify(setTimeout);\n\nconst ComputerVisionClient = require('@azure/cognitiveservices-computervision').ComputerVisionClient;\n\nconst ApiKeyCredentials = require('@azure/ms-rest-js').ApiKeyCredentials;\n\nexport function computerVision(photo) {\n  async.series([async function () {\n    const computerVisionClient = new ComputerVisionClient(new ApiKeyCredentials({\n      inHeader: {\n        'Ocp-Apim-Subscription-Key': COMPUTER_VISION_SUBSCRIPTION_KEY\n      }\n    }), COMPUTER_VISION_ENDPOINT); // const describeURL = \"data:image/png;base64,\" + photo.base64; //image url goes here\n\n    const describeURL = \"\";\n    console.log(photo.base64);\n\n    if (describeURL !== undefined) {\n      // Analyze URL image\n      console.log('Analyzing URL image to describe...', describeURL.split('/').pop());\n      const caption = (await computerVisionClient.describeImage(describeURL)).captions[0];\n      console.log(`This may be ${caption.text} (${caption.confidence.toFixed(2)} confidence)`);\n    }\n  }, function () {\n    return new Promise(resolve => {\n      resolve();\n    });\n  }], err => {\n    throw err;\n  });\n} // computerVision();","map":{"version":3,"sources":["/Users/ahadyboy/Desktop/Tha Boy/UNI/2020 - UNI/SWEN325/Assignment 1/Packit/src/analyseImage.ts"],"names":["COMPUTER_VISION_SUBSCRIPTION_KEY","COMPUTER_VISION_ENDPOINT","async","require","fs","https","path","createReadStream","sleep","promisify","setTimeout","ComputerVisionClient","ApiKeyCredentials","computerVision","photo","series","computerVisionClient","inHeader","describeURL","console","log","base64","undefined","split","pop","caption","describeImage","captions","text","confidence","toFixed","Promise","resolve","err"],"mappings":"AAAA,SAASA,gCAAT,EAA2CC,wBAA3C,QAA0E,eAA1E;;AAGA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMI,gBAAgB,GAAGJ,OAAO,CAAC,IAAD,CAAP,CAAcI,gBAAvC;;AACA,MAAMC,KAAK,GAAGL,OAAO,CAAC,MAAD,CAAP,CAAgBM,SAAhB,CAA0BC,UAA1B,CAAd;;AACA,MAAMC,oBAAoB,GAAGR,OAAO,CAAC,yCAAD,CAAP,CAAmDQ,oBAAhF;;AACA,MAAMC,iBAAiB,GAAGT,OAAO,CAAC,mBAAD,CAAP,CAA6BS,iBAAvD;;AAEA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAAsC;AAC3CZ,EAAAA,KAAK,CAACa,MAAN,CAAa,CACX,kBAAkB;AAChB,UAAMC,oBAAoB,GAAG,IAAIL,oBAAJ,CAC3B,IAAIC,iBAAJ,CAAsB;AAAEK,MAAAA,QAAQ,EAAE;AAAE,qCAA6BjB;AAA/B;AAAZ,KAAtB,CAD2B,EAC6EC,wBAD7E,CAA7B,CADgB,CAGhB;;AACA,UAAMiB,WAAW,GAAG,EAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,MAAlB;;AAEA,QAAIH,WAAW,KAAKI,SAApB,EAA+B;AAC7B;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDF,WAAW,CAACK,KAAZ,CAAkB,GAAlB,EAAuBC,GAAvB,EAAlD;AACA,YAAMC,OAAO,GAAG,CAAC,MAAMT,oBAAoB,CAACU,aAArB,CAAmCR,WAAnC,CAAP,EAAwDS,QAAxD,CAAiE,CAAjE,CAAhB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAa,eAAcK,OAAO,CAACG,IAAK,KAAIH,OAAO,CAACI,UAAR,CAAmBC,OAAnB,CAA2B,CAA3B,CAA8B,cAA1E;AACD;AAEF,GAfU,EAgBX,YAAY;AACV,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9BA,MAAAA,OAAO;AACR,KAFM,CAAP;AAGD,GApBU,CAAb,EAqBIC,GAAD,IAAc;AACf,UAAOA,GAAP;AACD,GAvBD;AAwBD,C,CAED","sourcesContent":["import { COMPUTER_VISION_SUBSCRIPTION_KEY, COMPUTER_VISION_ENDPOINT} from \"./credentials\";\nimport {Photo} from \"./usePhotoGallery\";\n\nconst async = require('async');\nconst fs = require('fs');\nconst https = require('https');\nconst path = require(\"path\");\nconst createReadStream = require('fs').createReadStream;\nconst sleep = require('util').promisify(setTimeout);\nconst ComputerVisionClient = require('@azure/cognitiveservices-computervision').ComputerVisionClient;\nconst ApiKeyCredentials = require('@azure/ms-rest-js').ApiKeyCredentials;\n\nexport function computerVision(photo: Photo) {\n  async.series([\n    async function () {\n      const computerVisionClient = new ComputerVisionClient(\n        new ApiKeyCredentials({ inHeader: { 'Ocp-Apim-Subscription-Key': COMPUTER_VISION_SUBSCRIPTION_KEY } }), COMPUTER_VISION_ENDPOINT);\n      // const describeURL = \"data:image/png;base64,\" + photo.base64; //image url goes here\n      const describeURL = \"\";\n      console.log(photo.base64);\n\n      if (describeURL !== undefined) {\n        // Analyze URL image\n        console.log('Analyzing URL image to describe...', describeURL.split('/').pop());\n        const caption = (await computerVisionClient.describeImage(describeURL)).captions[0];\n        console.log(`This may be ${caption.text} (${caption.confidence.toFixed(2)} confidence)`);\n      }\n\n    },\n    function () {\n      return new Promise((resolve) => {\n        resolve();\n      })\n    }\n  ], (err: any) => {\n    throw (err);\n  });\n}\n\n// computerVision();"]},"metadata":{},"sourceType":"module"}