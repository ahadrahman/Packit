{"ast":null,"code":"import { useState } from \"react\";\nimport { useCamera } from '@ionic/react-hooks/camera';\nimport { base64FromPath } from '@ionic/react-hooks/filesystem';\nimport { CameraResultType, CameraSource, FilesystemDirectory } from \"@capacitor/core\";\nexport function usePhotoGallery() {\n  const {\n    getPhoto\n  } = useCamera();\n  const [photos, setPhotos] = useState([]);\n\n  const takePhoto = async () => {\n    const cameraPhoto = await getPhoto({\n      resultType: CameraResultType.Uri,\n      source: CameraSource.Camera,\n      quality: 100\n    });\n    const fileName = new Date().getTime() + '.jpeg';\n    const savedFileImage = await savePicture(cameraPhoto, fileName);\n    const newPhotos = [savedFileImage, ...photos];\n    setPhotos(newPhotos);\n  };\n\n  return {\n    photos,\n    takePhoto\n  };\n}\n\nconst savePicture = async (photo, fileName) => {\n  const base64Data = await base64FromPath(photo.webPath);\n  const savedFile = await writeFile({\n    path: fileName,\n    data: base64Data,\n    directory: FilesystemDirectory.Data\n  }); // Use webPath to display the new image instead of base64 since it's\n  // already loaded into memory\n\n  return {\n    filepath: fileName,\n    webviewPath: photo.webPath\n  };\n};","map":{"version":3,"sources":["/Users/ahadyboy/Desktop/Tha Boy/UNI/2020 - UNI/SWEN325/Assignment 1/Packit/src/usePhotoGallery.ts"],"names":["useState","useCamera","base64FromPath","CameraResultType","CameraSource","FilesystemDirectory","usePhotoGallery","getPhoto","photos","setPhotos","takePhoto","cameraPhoto","resultType","Uri","source","Camera","quality","fileName","Date","getTime","savedFileImage","savePicture","newPhotos","photo","base64Data","webPath","savedFile","writeFile","path","data","directory","Data","filepath","webviewPath"],"mappings":"AAAA,SAASA,QAAT,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAAwBC,cAAxB,QAA8C,+BAA9C;AAGA,SAASC,gBAAT,EAA2BC,YAA3B,EAAiEC,mBAAjE,QAA4F,iBAA5F;AAKA,OAAO,SAASC,eAAT,GAA2B;AAEhC,QAAM;AAAEC,IAAAA;AAAF,MAAeN,SAAS,EAA9B;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAU,EAAV,CAApC;;AAEA,QAAMU,SAAS,GAAG,YAAY;AAC5B,UAAMC,WAAW,GAAG,MAAMJ,QAAQ,CAAC;AACjCK,MAAAA,UAAU,EAAET,gBAAgB,CAACU,GADI;AAEjCC,MAAAA,MAAM,EAAEV,YAAY,CAACW,MAFY;AAGjCC,MAAAA,OAAO,EAAE;AAHwB,KAAD,CAAlC;AAKA,UAAMC,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,OAAxC;AACA,UAAMC,cAAc,GAAG,MAAMC,WAAW,CAACV,WAAD,EAAcM,QAAd,CAAxC;AACA,UAAMK,SAAS,GAAG,CAACF,cAAD,EAAiB,GAAGZ,MAApB,CAAlB;AACAC,IAAAA,SAAS,CAACa,SAAD,CAAT;AACD,GAVD;;AAYA,SAAO;AACLd,IAAAA,MADK;AAELE,IAAAA;AAFK,GAAP;AAID;;AAED,MAAMW,WAAW,GAAG,OAAOE,KAAP,EAA2BN,QAA3B,KAAgE;AAClF,QAAMO,UAAU,GAAG,MAAMtB,cAAc,CAACqB,KAAK,CAACE,OAAP,CAAvC;AACA,QAAMC,SAAS,GAAG,MAAMC,SAAS,CAAC;AAChCC,IAAAA,IAAI,EAAEX,QAD0B;AAEhCY,IAAAA,IAAI,EAAEL,UAF0B;AAGhCM,IAAAA,SAAS,EAAEzB,mBAAmB,CAAC0B;AAHC,GAAD,CAAjC,CAFkF,CAQlF;AACA;;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAEf,QADL;AAELgB,IAAAA,WAAW,EAAEV,KAAK,CAACE;AAFd,GAAP;AAID,CAdD","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useCamera } from '@ionic/react-hooks/camera';\nimport { useFilesystem, base64FromPath } from '@ionic/react-hooks/filesystem';\nimport { useStorage } from '@ionic/react-hooks/storage';\nimport { isPlatform } from '@ionic/react';\nimport { CameraResultType, CameraSource, CameraPhoto, Capacitor, FilesystemDirectory } from \"@capacitor/core\";\n\n\n\n\nexport function usePhotoGallery() {\n\n  const { getPhoto } = useCamera();\n  const [photos, setPhotos] = useState<Photo[]>([]);\n\n  const takePhoto = async () => {\n    const cameraPhoto = await getPhoto({\n      resultType: CameraResultType.Uri,\n      source: CameraSource.Camera,\n      quality: 100\n    });\n    const fileName = new Date().getTime() + '.jpeg';\n    const savedFileImage = await savePicture(cameraPhoto, fileName);\n    const newPhotos = [savedFileImage, ...photos];\n    setPhotos(newPhotos);\n  };\n\n  return {\n    photos,\n    takePhoto\n  };\n}\n\nconst savePicture = async (photo: CameraPhoto, fileName: string): Promise<Photo> => {\n  const base64Data = await base64FromPath(photo.webPath!);\n  const savedFile = await writeFile({\n    path: fileName,\n    data: base64Data,\n    directory: FilesystemDirectory.Data\n  });\n\n  // Use webPath to display the new image instead of base64 since it's\n  // already loaded into memory\n  return {\n    filepath: fileName,\n    webviewPath: photo.webPath\n  };\n};\n\nexport interface Photo {\n  filepath: string;\n  webviewPath?: string;\n  base64?: string;\n}"]},"metadata":{},"sourceType":"module"}