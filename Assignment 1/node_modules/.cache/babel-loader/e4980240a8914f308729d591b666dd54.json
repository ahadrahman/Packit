{"ast":null,"code":"var _jsxFileName = \"/Users/ahadyboy/Desktop/Tha Boy/UNI/2020 - UNI/SWEN325/Assignment 1/Packit/src/WeatherState.tsx\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport { OPEN_WEATHER_KEY } from \"./credentials\";\nlet WeatherContext = createContext({});\nlet weatherKey = OPEN_WEATHER_KEY;\n\nfunction WeatherContextProvider(props) {\n  let cityName = props.city;\n  const [weather, setWeather] = useState(\"\");\n  useEffect(() => {\n    fetch('https://api.openweathermap.org/data/2.5/weather?q=' + cityName + '&appid=' + weatherKey).then(data => {\n      console.log(data);\n    });\n  }, []); // Nifty trick with useEffect from: https://css-tricks.com/run-useeffect-only-once/\n\n  return /*#__PURE__*/React.createElement(WeatherContext.Provider, {\n    value: {\n      weather: weather\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, props.children);\n}\n\nlet WeatherContextConsumer = WeatherContext.Consumer;\nexport { WeatherContext, WeatherContextProvider, WeatherContextConsumer };","map":{"version":3,"sources":["/Users/ahadyboy/Desktop/Tha Boy/UNI/2020 - UNI/SWEN325/Assignment 1/Packit/src/WeatherState.tsx"],"names":["React","createContext","useState","useEffect","OPEN_WEATHER_KEY","WeatherContext","weatherKey","WeatherContextProvider","props","cityName","city","weather","setWeather","fetch","then","data","console","log","children","WeatherContextConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,SAAQC,gBAAR,QAA+B,eAA/B;AAMA,IAAIC,cAAc,GAAGJ,aAAa,CAAC,EAAD,CAAlC;AACA,IAAIK,UAAU,GAAGF,gBAAjB;;AAEA,SAASG,sBAAT,CAAgCC,KAAhC,EAAmF;AAEjF,MAAIC,QAAQ,GAAGD,KAAK,CAACE,IAArB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAC,uDAAuDJ,QAAvD,GAAkE,SAAlE,GAA8EH,UAA/E,CAAL,CACGQ,IADH,CACQC,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KAHH;AAID,GALQ,EAKN,EALM,CAAT,CANiF,CAWzE;;AAER,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAACJ,MAAAA,OAAO,EAAGA;AAAX,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsDH,KAAK,CAACU,QAA5D,CADF;AAGD;;AAED,IAAIC,sBAAsB,GAAGd,cAAc,CAACe,QAA5C;AAEA,SAASf,cAAT,EAAyBE,sBAAzB,EAAiDY,sBAAjD","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport {OPEN_WEATHER_KEY} from \"./credentials\";\n\nexport interface Weather {\n  weather : string\n}\n\nlet WeatherContext = createContext({} as Weather);\nlet weatherKey = OPEN_WEATHER_KEY;\n\nfunction WeatherContextProvider(props: { children: React.ReactNode; city: string}) {\n\n  let cityName = props.city;\n  const [weather, setWeather] = useState(\"\");\n\n\n  useEffect(() => {\n    fetch('https://api.openweathermap.org/data/2.5/weather?q=' + cityName + '&appid=' + weatherKey)\n      .then(data => {\n        console.log(data);\n      })\n  }, []); // Nifty trick with useEffect from: https://css-tricks.com/run-useeffect-only-once/\n\n  return (\n    <WeatherContext.Provider value={{weather : weather}}>{props.children}</WeatherContext.Provider>\n  )\n}\n\nlet WeatherContextConsumer = WeatherContext.Consumer;\n\nexport { WeatherContext, WeatherContextProvider, WeatherContextConsumer };"]},"metadata":{},"sourceType":"module"}