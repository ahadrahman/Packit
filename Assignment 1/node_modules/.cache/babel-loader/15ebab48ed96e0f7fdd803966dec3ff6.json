{"ast":null,"code":"var _jsxFileName = \"/Users/ahadyboy/Desktop/Tha Boy/UNI/2020 - UNI/SWEN325/Assignment 1/Packit/src/ComputerVisionState.tsx\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport { computerVision } from \"./analyseImage\";\nlet TagsContext = createContext({});\n\nfunction TagsContextProvider(props) {\n  let currentPhoto = props.photo;\n  const [tags, setTags] = useState([]);\n  useEffect(() => {\n    let tags_array = [];\n\n    const loadTags = async () => {\n      tags_array.concat(computerVision(currentPhoto, setTags));\n      console.log(\"in computer vision state\");\n      console.log(tags);\n      setTags(tags_array);\n    };\n\n    loadTags();\n  }, []); // Nifty trick with useEffect from: https://css-tricks.com/run-useeffect-only-once/\n\n  return /*#__PURE__*/React.createElement(TagsContext.Provider, {\n    value: {\n      tags: tags\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, props.children);\n}\n\nlet TagsContextConsumer = TagsContext.Consumer;\nexport { TagsContext, TagsContextProvider, TagsContextConsumer };","map":{"version":3,"sources":["/Users/ahadyboy/Desktop/Tha Boy/UNI/2020 - UNI/SWEN325/Assignment 1/Packit/src/ComputerVisionState.tsx"],"names":["React","createContext","useState","useEffect","computerVision","TagsContext","TagsContextProvider","props","currentPhoto","photo","tags","setTags","tags_array","loadTags","concat","console","log","children","TagsContextConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,SAAQC,cAAR,QAA6B,gBAA7B;AAMA,IAAIC,WAAW,GAAGJ,aAAa,CAAC,EAAD,CAA/B;;AAEA,SAASK,mBAAT,CAA6BC,KAA7B,EAAgF;AAC9E,MAAIC,YAAY,GAAGD,KAAK,CAACE,KAAzB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,UAAoB,GAAG,EAA3B;;AACA,UAAMC,QAAQ,GAAG,YAAY;AAC3BD,MAAAA,UAAU,CAACE,MAAX,CAAkBV,cAAc,CAACI,YAAD,EAAeG,OAAf,CAAhC;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACAC,MAAAA,OAAO,CAACC,UAAD,CAAP;AACD,KALD;;AAMAC,IAAAA,QAAQ;AACT,GATQ,EASN,EATM,CAAT,CAJ8E,CAatE;;AAER,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACH,MAAAA,IAAI,EAAGA;AAAR,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CH,KAAK,CAACU,QAAnD,CADF;AAGD;;AAED,IAAIC,mBAAmB,GAAGb,WAAW,CAACc,QAAtC;AAEA,SAASd,WAAT,EAAsBC,mBAAtB,EAA2CY,mBAA3C","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport {Photo} from \"./usePhotoGallery\";\nimport {computerVision} from \"./analyseImage\";\n\nexport interface Tags {\n  tags : string[]\n}\n\nlet TagsContext = createContext({} as Tags);\n\nfunction TagsContextProvider(props: { children: React.ReactNode; photo: Photo}) {\n  let currentPhoto = props.photo;\n  const [tags, setTags] = useState([] as string[]);\n\n  useEffect(() => {\n    let tags_array: string[] = [];\n    const loadTags = async () => {\n      tags_array.concat(computerVision(currentPhoto, setTags));\n      console.log(\"in computer vision state\");\n      console.log(tags);\n      setTags(tags_array);\n    };\n    loadTags();\n  }, []); // Nifty trick with useEffect from: https://css-tricks.com/run-useeffect-only-once/\n  \n  return (\n    <TagsContext.Provider value={{tags : tags}}>{props.children}</TagsContext.Provider>\n  )\n}\n\nlet TagsContextConsumer = TagsContext.Consumer;\n\nexport { TagsContext, TagsContextProvider, TagsContextConsumer };"]},"metadata":{},"sourceType":"module"}