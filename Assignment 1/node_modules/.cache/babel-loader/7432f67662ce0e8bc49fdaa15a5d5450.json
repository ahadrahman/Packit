{"ast":null,"code":"var _jsxFileName = \"/Users/ahadyboy/Desktop/Tha Boy/UNI/2020 - UNI/SWEN325/Assignment 1/Packit/src/states/SuitcasesState.tsx\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport firebase from \"firebase\";\nlet SuitcasesContext = createContext({});\n\nfunction SuitcasesContextProvider(props) {\n  let tripID = props.tripID;\n  const [suitcases, setSuitcases] = useState([]);\n  let dbRef = firebase.database().ref('/trips/' + tripID + '/suitcases');\n  useEffect(() => {\n    dbRef.on('value', snapshot => {\n      let data = snapshot.val();\n\n      if (data != null) {\n        setSuitcases(Object.values(data));\n      }\n    });\n  }, [tripID]); // Nifty trick with useEffect from: https://css-tricks.com/run-useeffect-only-once/\n\n  return /*#__PURE__*/React.createElement(SuitcasesContext.Provider, {\n    value: {\n      suitcases: suitcases\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, props.children);\n}\n\nlet SuitcasesContextConsumer = SuitcasesContext.Consumer;\nexport { SuitcasesContext, SuitcasesContextProvider, SuitcasesContextConsumer };","map":{"version":3,"sources":["/Users/ahadyboy/Desktop/Tha Boy/UNI/2020 - UNI/SWEN325/Assignment 1/Packit/src/states/SuitcasesState.tsx"],"names":["React","createContext","useState","useEffect","firebase","SuitcasesContext","SuitcasesContextProvider","props","tripID","suitcases","setSuitcases","dbRef","database","ref","on","snapshot","data","val","Object","values","children","SuitcasesContextConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,QAAP,MAAqB,UAArB;AAOA,IAAIC,gBAAgB,GAAGJ,aAAa,CAAC,EAAD,CAApC;;AAEA,SAASK,wBAAT,CAAkCC,KAAlC,EAAuF;AAErF,MAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEA,MAAIS,KAAK,GAAGP,QAAQ,CAACQ,QAAT,GAAoBC,GAApB,CAAwB,YAAYL,MAAZ,GAAqB,YAA7C,CAAZ;AAGAL,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAACG,EAAN,CAAS,OAAT,EAAkBC,QAAQ,IAAI;AAC5B,UAAIC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAX;;AACA,UAAID,IAAI,IAAI,IAAZ,EAAkB;AAChBN,QAAAA,YAAY,CAACQ,MAAM,CAACC,MAAP,CAAcH,IAAd,CAAD,CAAZ;AACD;AACF,KALD;AAMD,GAPQ,EAON,CAACR,MAAD,CAPM,CAAT,CARqF,CAevE;;AAEd,sBACE,oBAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAGA;AAAb,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4DF,KAAK,CAACa,QAAlE,CADF;AAGD;;AAED,IAAIC,wBAAwB,GAAGhB,gBAAgB,CAACiB,QAAhD;AAEA,SAASjB,gBAAT,EAA2BC,wBAA3B,EAAqDe,wBAArD","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport firebase from \"firebase\";\nimport Suitcase from \"../classes/Suitcase\";\n\nexport interface Suitcases {\n  suitcases : Suitcase[]\n}\n\nlet SuitcasesContext = createContext({} as Suitcases);\n\nfunction SuitcasesContextProvider(props: { children: React.ReactNode; tripID: string}) {\n\n  let tripID = props.tripID;\n  const [suitcases, setSuitcases] = useState([] as Suitcase[]);\n\n  let dbRef = firebase.database().ref('/trips/' + tripID + '/suitcases');\n\n\n  useEffect(() => {\n    dbRef.on('value', snapshot => {\n      let data = snapshot.val();\n      if (data != null) {\n        setSuitcases(Object.values(data));\n      }\n    });\n  }, [tripID]); // Nifty trick with useEffect from: https://css-tricks.com/run-useeffect-only-once/\n\n  return (\n    <SuitcasesContext.Provider value={{suitcases : suitcases}}>{props.children}</SuitcasesContext.Provider>\n  )\n}\n\nlet SuitcasesContextConsumer = SuitcasesContext.Consumer;\n\nexport { SuitcasesContext, SuitcasesContextProvider, SuitcasesContextConsumer };"]},"metadata":{},"sourceType":"module"}