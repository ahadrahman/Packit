{"ast":null,"code":"import { useState } from \"react\";\nimport { useCamera } from '@ionic/react-hooks/camera';\nimport { CameraResultType, CameraSource } from \"@capacitor/core\";\nexport function usePhotoGallery() {\n  const {\n    getPhoto\n  } = useCamera();\n  const [photos, setPhotos] = useState([]);\n\n  const takePhoto = async () => {\n    const image = await getPhoto({\n      resultType: CameraResultType.Base64,\n      source: CameraSource.Camera,\n      quality: 100\n    }).catch(error => {\n      console.log(\"error loading camera\");\n    });\n  };\n\n  return {\n    takePhoto\n  };\n}","map":{"version":3,"sources":["/Users/ahadyboy/Desktop/Tha Boy/UNI/2020 - UNI/SWEN325/Assignment 1/Packit/src/usePhotoGallery.ts"],"names":["useState","useCamera","CameraResultType","CameraSource","usePhotoGallery","getPhoto","photos","setPhotos","takePhoto","image","resultType","Base64","source","Camera","quality","catch","error","console","log"],"mappings":"AAAA,SAASA,QAAT,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,2BAA1B;AAIA,SAASC,gBAAT,EAA2BC,YAA3B,QAA4F,iBAA5F;AAGA,OAAO,SAASC,eAAT,GAA2B;AAEhC,QAAM;AAAEC,IAAAA;AAAF,MAAeJ,SAAS,EAA9B;AAEA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAU,EAAV,CAApC;;AAEA,QAAMQ,SAAS,GAAG,YAAY;AAC5B,UAAMC,KAAK,GAAG,MAAMJ,QAAQ,CAAC;AAC3BK,MAAAA,UAAU,EAAER,gBAAgB,CAACS,MADF;AAE3BC,MAAAA,MAAM,EAAET,YAAY,CAACU,MAFM;AAG3BC,MAAAA,OAAO,EAAE;AAHkB,KAAD,CAAR,CAIjBC,KAJiB,CAIXC,KAAK,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,KANmB,CAApB;AAOD,GARD;;AASA,SAAO;AACLV,IAAAA;AADK,GAAP;AAGD","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useCamera } from '@ionic/react-hooks/camera';\nimport { useFilesystem, base64FromPath } from '@ionic/react-hooks/filesystem';\nimport { useStorage } from '@ionic/react-hooks/storage';\nimport { isPlatform } from '@ionic/react';\nimport { CameraResultType, CameraSource, CameraPhoto, Capacitor, FilesystemDirectory } from \"@capacitor/core\";\n\n\nexport function usePhotoGallery() {\n\n  const { getPhoto } = useCamera();\n\n  const [photos, setPhotos] = useState<Photo[]>([]);\n\n  const takePhoto = async () => {\n    const image = await getPhoto({\n      resultType: CameraResultType.Base64,\n      source: CameraSource.Camera,\n      quality: 100\n    }).catch(error => {\n      console.log(\"error loading camera\");\n    });\n  }\n  return {\n    takePhoto\n  };\n}\n\n\nexport interface Photo {\n  filepath: string;\n  webviewPath?: string;\n  base64?: string;\n}\n"]},"metadata":{},"sourceType":"module"}